name: run_tests

on:
  pull_request:
  push:
    branches: [main]

# Cancels all previous workflow runs for pull requests that have not completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name for pull requests
  # or the commit hash for any other events.
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:
  unittest:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            name: "Full Test Suite"
            python-version: "3.12"
            test-subset: |
              tests/base --ignore tests/base/test_cge.py
              tests/base/test_cge.py -k "not test_model_gradients and not test_backends_agree and not test_can_compile_without_jax_installed and not test_invalid_simulation_raises"
              tests/compile
              tests/tools
              tests/utilities
              tests/test_plotting.py
              tests/test_production_functions.py
          - os: ubuntu-latest
            name: "Test Model Gradients"
            python-version: "3.12"
            test-subset: |
              tests/base/test_cge.py::test_model_gradients
          - os: ubuntu-latest
            name: "Test Backends Agree"
            python-version: "3.12"
            test-subset: |
              tests/base/test_cge.py::test_backends_agree
              tests/base/test_cge.py::test_can_compile_without_jax_installed
          - os: windows-latest
            name: "Partial Test Suite"
            python-version: "3.11"
            test-subset: |
              tests/base --ignore tests/base/test_cge.py
              tests/compile
              tests/tools
              tests/utilities
              tests/test_plotting.py
              tests/test_production_functions.py

    runs-on: ${{ matrix.os }}

    env:
      TEST_SUBSET: ${{ matrix.test-subset }}

    defaults:
      run:
        shell: bash -leo pipefail {0}

    steps:
      - uses: actions/checkout@v4
      - uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: conda_envs/cge_test.yml
          create-args: >-
            python=${{matrix.python-version}}
          environment-name: cge-test
          init-shell: bash
          cache-environment: true

      - name: Create matrix ID
        id: matrix_id
        env:
          MATRIX_CONTENT: ${{ toJson(matrix) }}
        run: |
          echo $MATRIX_CONTENT
          export MATRIX_ID=`echo $MATRIX_CONTENT | sha256sum | cut -c 1-32`
          echo $MATRIX_ID
          echo "id=$MATRIX_ID" >> $GITHUB_OUTPUT

      - name: Install current branch
        run: |
          pip install -e .
          python --version

      - name: Run ${{ matrix.name }}
        run: |
          echo "$TEST_SUBSET" |
          xargs python -m pytest --color=yes -vv --cov=cge_modeling/ --cov-report=xml:coverage/coverage-${MATRIX_ID}.xml --no-cov-on-fail --durations=50
        env:
          MATRIX_ID: ${{ steps.matrix_id.outputs.id }}

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ steps.matrix_id.outputs.id }}
          path: coverage/coverage-${{ steps.matrix-id.outputs.id }}.xml

  all_tests:
    if: ${{ always() }}
    runs-on: ubuntu-latest
    needs: [ unittest ]
    steps:
      - name: Check all tests pass
        if: ${{ needs.unittest.result != 'success' }}
        run: exit 1


  upload_coverage:
    runs-on: ubuntu-latest
    name: "Upload Coverage Report"
    needs: [ all_tests]
    if: ${{ needs.all_tests.result == 'success' }}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade coverage>=5.1 coveralls

      - name: Download coverage file
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-*
          path: coverage
          merge-multiple: true

      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v5
        with:
          directory: ./coverage/
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

name: run_tests

on:
  pull_request:
  push:
    branches: [main]

# Cancels all previous workflow runs for pull requests that have not completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name for pull requests
  # or the commit hash for any other events.
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:
  unittest:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            name: "Full Test Suite"
            python-version: "3.12"
            test-subset: |
              tests/base --ignore tests/base/test_cge.py
              tests/base/test_cge.py -k "not test_model_gradients and not test_backends_agree"
              tests/compile
              tests/tools
              tests/utilities
              tests/test_plotting.py
              tests/test_production_functions.py
          - os: ubuntu-latest
            name: "Test Model Gradients"
            python-version: "3.12"
            test-subset: |
              tests/base/test_cge.py::test_model_gradients
          - os: ubuntu-latest
            name: "Test Backends Agree"
            python-version: "3.12"
            test-subset: |
              tests/base/test_cge.py::test_backends_agree
          - os: windows-latest
            name: "Partial Test Suite"
            python-version: "3.11"
            test-subset: |
              tests/base --ignore tests/base/test_cge.py
              tests/compile
              tests/tools
              tests/utilities
              tests/test_plotting.py
              tests/test_production_functions.py

    runs-on: ${{ matrix.os }}

    env:
      TEST_SUBSET: ${{ matrix.test-subset }}

    defaults:
      run:
        shell: bash -leo pipefail {0}

    steps:
    - uses: actions/checkout@v4
    - uses: mamba-org/setup-micromamba@v2
      with:
        environment-file: conda_envs/cge_test.yml
        create-args: >-
          python=${{matrix.python-version}}
        environment-name: cge-test
        init-shell: bash
        cache-environment: true

    - name: Install current branch
      run: |
        pip install -e .
        python --version

    - name: Run ${{ matrix.name }}
      run: |
        IFS=$'\n' read -rd '' -a args <<<"$TEST_SUBSET"
        echo "${args[@]}"
        python -m pytest --color=yes -vv --cov=cge_modeling --cov-append --cov-report=xml --no-cov-on-fail --cov-report term --durations=50 $TEST_SUBSET

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }} # use token for more robust uploads
        env_vars: TEST_SUBSET
        name: ${{ matrix.os }}
        fail_ci_if_error: false
        verbose: true
